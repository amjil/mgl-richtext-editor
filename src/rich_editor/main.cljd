(ns rich-editor.main
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:appflowy_editor/appflowy_editor.dart" :as appeditor]
   ["dart:convert" :as convert]
   [virtual-keyboard.keyboard :as keyboard]
   [virtual-keyboard.keyboard-action :as keyboard-action]
   [virtual-keyboard.options :as options]
   [virtual-keyboard.input-control :as control]
   [menu-bar.menu :as menu]
   [cljd.flutter :as f]))
   
(defn body []
  (control/set-control)
  (f/widget
   :context ctx
   :let [width  (-> m/MediaQuery (.of ctx) .-size .-width)
         info (merge options/keyboard-option {} {:keyboard/width width})
         state (atom (merge options/keyboard-state))
         editor-state (appeditor/EditorState
                       .document (appeditor.Document/fromJson
                                  (Map.castFrom
                                   (convert/jsonDecode "{\"document\":{\"type\":\"page\",\"children\":[{\"type\":\"heading\",\"data\":{\"level\":3,\"delta\":[{\"insert\":\"Mongolian Editor is now in\",\"attributes\":{\"italic\":false,\"bold\":true}}]}}]}}"))))]
   :managed [scroll-controll (appeditor/EditorScrollController
                              .editorState editor-state
                              .shrinkWrap false)]
   :bind {:state state :info info}
   :watch [{candidates-list :keyboard/candidates-list} state
           visible control/visible]
   (m/SafeArea)
   (m/Stack)
   .children
   [(m/Column
    .children 
    [(m/Expanded
      .child (appeditor/AppFlowyEditor
              .editorStyle (appeditor.EditorStyle/mobile
                            .textScaleFactor 1.0
                            .cursorColor (.fromARGB m/Color 255 134 46 247)
                            .dragHandleColor (.fromARGB m/Color 255 134 46 247)
                            .selectionColor (.fromARGB m/Color 50 134 46 247)
                            .textStyleConfiguration (appeditor/TextStyleConfiguration
                                                     .text (m/TextStyle
                                                            .fontSize 20
                                                            .color m.Colors/black
                                                            .fontFamily "MongolianBaiZheng"))
                            .padding (.symmetric m/EdgeInsets .horizontal 0 .vertical 24)
                            .magnifierSize (m/Size 48 72)
                            .mobileDragHandleBallSize (m/Size 12 12))
              .editorState editor-state
              .editorScrollController scroll-controll))
     (appeditor/MobileToolbar
      .toolbarHeight 48
      .toolbarItems [appeditor/textDecorationMobileToolbarItemV2
                     (appeditor/buildTextAndBackgroundColorMobileToolbarItem)
                     appeditor/blocksMobileToolbarItem
                     appeditor/linkMobileToolbarItem
                     appeditor/dividerMobileToolbarItem]
      .editorState editor-state)
     (m/Visibility
      .visible visible
      .child
      (m/FocusScope
       .canRequestFocus false
       .child
       (m/TextFieldTapRegion
        .child
        (m/Container
         .color (-> m/Colors .grey .-shade300)
         .child
         (keyboard/keyboard)))))])
         (m/Positioned
          .bottom (+ options/keyboard-default-height (* 4 (+ 4 (:keyboard/row-vertical-padding info))))
          .right (/ width 4)
          .child
          (menu/menu {:bar {:elavation 10}
                      :item {:on-tap (fn [x] (keyboard-action/on-candidates-clicked x state))}}
                     candidates-list))]
  ;;  (appeditor/MobileToolbar
  ;;   .toolbarHeight 48
  ;;   .toolbarItems [appeditor/textDecorationMobileToolbarItemV2
  ;;                  (appeditor/buildTextAndBackgroundColorMobileToolbarItem)
  ;;                  appeditor/blocksMobileToolbarItem
  ;;                  appeditor/linkMobileToolbarItem
  ;;                  appeditor/dividerMobileToolbarItem]
  ;;   .editorState editor-state
  ;;   .child
  ;;   (m/Column
  ;;    .children
  ;;    [(m/Expanded
  ;;      .child
  ;;      (appeditor/MobileFloatingToolbar
  ;;       .editorState editor-state
  ;;       .editorScrollController scroll-controll
  ;;       .toolbarBuilder
  ;;       (fn [_ anchor close-toolbar]
  ;;         (m.AdaptiveTextSelectionToolbar/editable
  ;;          .clipboardStatus m.ClipboardStatus/pasteable
  ;;          .onCopy (fn []
  ;;                    (appeditor.copyCommand/execute editor-state)
  ;;                    (close-toolbar)
  ;;                    nil)
  ;;          .onCut (fn []
  ;;                   (appeditor.cutCommand/execute editor-state)
  ;;                   nil)
  ;;          .onPaste (fn []
  ;;                     (appeditor.pasteCommand/execute editor-state)
  ;;                     nil)
  ;;          .onSelectAll (fn []
  ;;                         (appeditor.selectAllCommand/execute editor-state)
  ;;                         nil)
  ;;          .onLiveTextInput nil
  ;;          .onLookUp nil
  ;;          .onSearchWeb nil
  ;;          .onShare nil
  ;;          .anchors (m/TextSelectionToolbarAnchors
  ;;                    .primaryAnchor anchor)))
  ;;       .child
  ;;       ))]))
  ;;  (m/Column
  ;;   .mainAxisAlignment m.MainAxisAlignment/spaceBetween
    ;; .crossAxisAlignment m.CrossAxisAlignment/stretch
    ;; .children
    ;; [(m/Expanded
      ;; .child )

    ;;  (m/Visibility
    ;;   .visible visible
    ;;   .child
    ;;   (m/FocusScope
    ;;    .canRequestFocus false
    ;;    .child
    ;;    (m/TextFieldTapRegion
    ;;     .child
    ;;     (m/Container
    ;;      .color (-> m/Colors .grey .-shade300)
    ;;      .child
    ;;      (keyboard/keyboard)))))
    ;;  ])
   ))

(defn main []
  (m.WidgetsFlutterBinding/ensureInitialized)
  (f/run
   (m/MaterialApp
    ;; .title "Welcome to Flutter"
    .theme (m/ThemeData .primarySwatch m.Colors/pink))
   .home
   (m/Scaffold
    ;; .appBar (m/AppBar
    ;;          .title (m/Text "Welcome to ClojureDart"))
    )
   .body
   (body)

  ;;  m/Center
  ;;  (m/Text "Let's get coding!"
  ;;          .style (m/TextStyle
  ;;                  .color m.Colors/red
  ;;                  .fontSize 32.0))
   ))
